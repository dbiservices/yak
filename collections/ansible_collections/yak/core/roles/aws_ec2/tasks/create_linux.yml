# Copyright: (c) 2023, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- name: Derive network configuration
  block:

    - delegate_to: localhost
      set_fact:
        instance_network:
          private_ip_address: "{{ private_ip.ip }}"
          assign_public_ip: true
      when: private_ip.mode == 'manual' and public_ip.mode == 'auto'

    - delegate_to: localhost
      set_fact:
        instance_network:
          private_ip_address: "{{ private_ip.ip }}"
          assign_public_ip: false
      when: private_ip.mode == 'manual' and ( public_ip.mode == 'manual' or public_ip.mode == 'none')

    - delegate_to: localhost
      set_fact:
        instance_network:
          assign_public_ip: true
      when: private_ip.mode == 'auto' and public_ip.mode == 'auto'

    - delegate_to: localhost
      set_fact:
        instance_network:
          assign_public_ip: false
      when: private_ip.mode == 'auto' and ( public_ip.mode == 'manual' or public_ip.mode == 'none')

- name: Call the role to generate the Linux init script
  include_role:
    name: yak.core.linux_init_script

- name: gather information about an AMI using ami-id
  delegate_to: localhost
  amazon.aws.ec2_ami_info:
    image_ids: '{{Â image_id }}'
    region: "{{ region_id }}"
  register: result_ec2_ami_info

- debug:
    msg: '{{ result_ec2_ami_info }}'
    
- name: Add AWS instance
  delegate_to: localhost
  amazon.aws.ec2_instance:
    region: "{{ region_id }}"
    state: "started"
    key_name: "{{ machine_name }}"
    instance_type: "{{ instance_type }}"
    image:
      id: "{{ image_id }}"
    wait: yes
    security_group: "{{ security_group_id }}"
    vpc_subnet_id: "{{ subnet_id }}"
    network: "{{ instance_network }}"
    volumes:
      - device_name: "{{ result_ec2_ami_info.images[0].root_device_name }}"
        ebs:
          volume_type: "{{ role_root_device_ebs_option.volume_type }}"
          volume_size: "{{ role_root_device_ebs_option.volume_size }}"
          encrypted: "{{ role_root_device_ebs_option.encrypted }}"
    tags: "{{ {'Name': server_name} | combine(custom_tags) }}"
    user_data: |
      #!/bin/bash -ex
      {{ linux_init_script }}
  register: r_aws

- debug: var=r_aws
  delegate_to: localhost
  when: debug | bool

- name: Set network interface name
  delegate_to: localhost
  amazon.aws.ec2_eni:
    region: "{{ region_id }}"
    eni_id: "{{ r_aws.instances[0].network_interfaces[0].network_interface_id }}"
    name: "{{ server_name }}-eni"
    description: "ENI deployed from YaK for instance {{ server_name }}"
    state: present
    tags: "{{ custom_tags }}"

- name: Associate manually the EIP to the instance
  delegate_to: localhost
  community.aws.ec2_eip:
    region: "{{ region_id }}"
    device_id: "{{ r_aws.instances[0].instance_id }}"
    ip: "{{ public_ip.ip }}"
    tags: "{{ {'Name': server_name} | combine(custom_tags) }}"
  when: public_ip.mode == 'manual'

