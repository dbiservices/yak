# Copyright: (c) 2023, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- name: Get the list of existing instances
  delegate_to: localhost
  community.aws.ec2_instance_info:
    region: "{{ region_id }}"
    filters:
      "tag:Name": "{{ machine_name }}"
      instance-state-name: [ "pending", "running", "shutting-down", "stopping", "stopped" ]
  register: r_ec2_instance_info
  failed_when: r_ec2_instance_info.instances|length != 1

- debug: var=r_ec2_instance_info
  delegate_to: localhost
  when: debug | bool

- name: Generate EC2 volumes variable for Windows
  delegate_to: localhost
  set_fact:
    ec2_volume:
      region: "{{ region_id }}"
      instance: "{{ r_ec2_instance_info.instances[0].instance_id }}"
      volume_size: "{{ yak_filesystem_configuration.size_gb|int }}"
      volume_type: "{{ yak_filesystem_configuration.volume_type }}"
      device_name: "/dev/sd{{ yak_filesystem_configuration.drive_letter|lower }}"
      encrypted: "{{ yak_filesystem_configuration.encrypted }}"
      delete_on_termination: "{{ yak_filesystem_configuration.delete_on_termination }}"
      tags: >
            {{
              {
                'Name': 'disk-' + machine_name + '-' + yak_filesystem_configuration.drive_letter + '-' + yak_filesystem_configuration.partition_label,
                'Partition_label': yak_filesystem_configuration.partition_label,
                'Drive_letter': yak_filesystem_configuration.drive_letter,
                'Yak_machine_name': machine_name
              }
              | combine(custom_tags)
            }}

- debug: var=ec2_volume
  delegate_to: localhost
  when: debug | bool

- name: Create and attach the volumes to instance
  delegate_to: localhost
  amazon.aws.ec2_vol: "{{ ec2_volume }}"
