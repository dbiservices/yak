# Copyright: (c) 2023, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- name: Get the list of existing instances
  delegate_to: localhost
  community.aws.ec2_instance_info:
    region: "{{ region_id }}"
    filters:
      "tag:Name": "{{ machine_name }}"
      instance-state-name: [ "pending", "running", "shutting-down", "stopping", "stopped" ]
  register: r_ec2_instance_info
  failed_when: r_ec2_instance_info.instances|length != 1

- debug: var=r_ec2_instance_info
  delegate_to: localhost
  when: debug | bool

- name: Generate EC2 volumes variable for Windows
  delegate_to: localhost
  set_fact:
    ec2_volume:
      region: "{{ region_id }}"
      instance: "{{ r_ec2_instance_info.instances[0].instance_id }}"
      volume_size: "{{ item.size_gb|int }}"
      volume_type: "{{ role_storage_devices.aws_component_disk_parameters.volume_type }}"
      device_name: "/dev/sd{{ item.drive_letter|lower }}"
      encrypted: "{{ role_storage_devices.aws_component_disk_parameters.encrypted }}"
      delete_on_termination: "{{ role_storage_devices.aws_component_disk_parameters.delete_on_termination }}"
      tags: "{{ {
                  'Name': 'disk_'+item.drive_letter+'_'+item.partition_label,
                  'Partition_label': item.partition_label,
                  'Drive_letter': item.drive_letter
                }
                | combine(custom_tags) }}"
  register: r_ec2_volumes
  loop: "{{ yak_inventory_os_storages }}"

- debug: var=r_ec2_volumes
  delegate_to: localhost
  when: debug | bool

- name: Create and attach the volumes to instance
  delegate_to: localhost
  amazon.aws.ec2_vol: "{{ item.ansible_facts.ec2_volume }}"
  loop: "{{ r_ec2_volumes.results }}"
