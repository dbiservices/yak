# Copyright: (c) 2023, dbi services, distributed without any warranty under the terms of the GNU General Public License v3  
- name: Create a logical volume
  become: yes
  community.general.lvol:
    vg: "{{ sanitized_mount_point_name }}"
    lv: "{{ sanitized_mount_point_name }}"
    size: "{{ yak_filesystem_configuration.size_gb }}g"
    shrink: no
    opts: "-i {{ number_of_devices }} -I {{ role_storage_devices.os_storage_linux_stripe_size }}"

- name: Create a filesystem on logical volume
  become: yes
  community.general.filesystem:
    fstype: "{{ yak_filesystem_configuration.filesystem_type }}"
    dev: "/dev/{{ sanitized_mount_point_name }}/{{ sanitized_mount_point_name }}"

- name: Get UUID of the File system
  become: yes
  shell: >
    lsblk /dev/{{ sanitized_mount_point_name }}/{{ sanitized_mount_point_name }}
    -o uuid
    | egrep  -v '^UUID'
  register: r_fs_uuid
  changed_when: false

- debug: var=r_fs_uuid
  when: debug | bool

- name: Assert that r_fs_uuid.stdout is not empty
  assert:
    that:
      - r_fs_uuid.stdout is not none
      - r_fs_uuid.stdout != ""
    fail_msg: "r_fs_uuid.stdout is empty!"
    
- name: Mount logical volume
  become: yes
  ansible.posix.mount:
    path: "{{ yak_filesystem_configuration.mount_point }}"
    src: "UUID={{ r_fs_uuid.stdout }}"
    # _netdev: must be set for OCI cloud at least, because we use ISCSI
    #          Not needed on AWS and Azure but not harmful.
    opts: _netdev{% if yak_filesystem_configuration.opts is defined %}{% if yak_filesystem_configuration.opts %}{% if yak_filesystem_configuration.opts|length>0 %},{{ yak_filesystem_configuration.opts }}{% endif %}{% endif %}{% endif %}
    fstype: "{{ yak_filesystem_configuration.filesystem_type }}"
    state: mounted
