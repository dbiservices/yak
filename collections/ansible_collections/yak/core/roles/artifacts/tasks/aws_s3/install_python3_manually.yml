
- set_fact:
    _python_version_to_install: 3.8.19
    artifact_aws_s3_custom_python3_bin: '/usr/local/bin/python3.8'
    
- name: Check if python is already installed
  stat:
    path: '{{ artifact_aws_s3_custom_python3_bin }}'
  register: stat_result

- when: 
  - ansible_python_version is version('3.8.0', '<', version_type='pep440')
  - not stat_result.stat.exists
  block:
    - name: Update package to install python
      become: yes
      community.general.zypper:
        update_cache: yes
        name:
          - gcc
          - openssl-devel
          - libffi-devel
          - zlib-devel
          - make
          - libbz2-devel
          - gzip
        state: present
      register: r_zypper
      retries: 5
      delay: 10
      until: r_zypper.rc == 0

    - name: Create temporary build directory
      ansible.builtin.tempfile:
        state: directory
        suffix: build
      register: tmp_build_dir

    - name: Download python
      ansible.builtin.get_url:
        url: https://www.python.org/ftp/python/{{ _python_version_to_install }}/Python-{{ _python_version_to_install }}.tgz
        dest: '{{ tmp_build_dir.path }}'


    - name: Unarchive python
      ansible.builtin.unarchive:
        src: '{{ tmp_build_dir.path }}/Python-{{ _python_version_to_install }}.tgz'
        dest: '{{ tmp_build_dir.path }}'
        remote_src: yes

    - name: Run configure
      ansible.builtin.shell: '{{ tmp_build_dir.path }}/Python-{{ _python_version_to_install }}/configure --enable-shared'
      args:
        chdir: '{{ tmp_build_dir.path }}/Python-{{ _python_version_to_install }}'

    - name: Run 'install' target as root
      become: true
      community.general.make:
        chdir: '{{ tmp_build_dir.path }}/Python-{{ _python_version_to_install }}'
        target: altinstall
    
    - name: Copy no overwrite
      become: true
      ansible.builtin.shell: |
        cp --no-clobber ./libpython3.8.so* /lib64/
        chmod 755 /lib64/libpython3.8.so*
        chmod -R 755 /usr/local/lib/python3.8
      args:
        chdir: '{{ tmp_build_dir.path }}/Python-{{ _python_version_to_install }}'

  always:
    - name: Clean temp folder
      become: true
      ansible.builtin.file:
        path: "{{ tmp_build_dir.path }}"
        state: absent
