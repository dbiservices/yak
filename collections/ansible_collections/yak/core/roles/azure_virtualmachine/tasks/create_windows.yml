# Copyright: (c) 2023, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- include_tasks: pre_create_windows.yml

- name: Set password for Windows Admin account
  no_log: true
  set_fact:
    os_admin_password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"

- name: Call the role to generate the winrm_script for WinRM config
  include_role:
    name: yak.core.winrm
  vars:
    script_type: azure
    winrm_user: "{{ ansible_user }}"
    winrm_user_password: "{{ os_admin_password }}"

- include_tasks: create_nic.yml

- name: Create the VM
  delegate_to: localhost
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    zones: "{{ zone_id|default(omit) }}"
    name: "{{ server_name }}"
    short_hostname: "{{ server_name }}"
    admin_username: "{{ ansible_user }}"
    admin_password: "{{ os_admin_password }}"
    vm_size: "{{ vm_size }}"
    virtual_network_name: "{{ virtual_network_name }}"
    subnet_name: "{{ subnet_name }}"
    security_profile:
      encryption_at_host: "{{ encryption_at_host | ternary(encryption_at_host,omit) }}"  # encryption_at_host should be defined in <infrastructure_name>/variables.yml if required, see : https://docs.ansible.com/ansible/latest/collections/azure/azcollection/azure_rm_virtualmachine_module.html#parameter-security_profile/encryption_at_host
    network_interfaces: "{{ server_name }}-nic-01"
    image:
      offer: "{{ image.offer }}"
      publisher: "{{ image.publisher }}"
      sku: "{{ image.sku }}"
      version: "{{ image.version }}"
    os_type: "{{ os_type | capitalize }}"
    managed_disk_type: "{{ role_root_azure_device_storage_account_type }}"
    os_disk_caching: "{{ role_root_azure_os_disk_caching }}"
    os_disk_size_gb: "{{ role_root_azure_os_disk_size_gb }}"
    remove_on_absent: "{{ role_root_azure_remove_on_absent }}"
    custom_data: "{{ winrm_script }}"
    tags: "{{ custom_tags }}"
  register: r_azure

- debug: var=r_azure
  delegate_to: localhost
  when: debug | bool

- name: Clear winrm variable and file
  include_role:
    name: yak.core.winrm
  vars:
    state: absent

- include_tasks: enable_ultra_ssd.yml

- name: VM Extension[copy file from custom data]
  delegate_to: localhost
  azure.azcollection.azure_rm_virtualmachineextension:
    name: winrm-extension
    resource_group: "{{ resource_group }}"
    virtual_machine_name: "{{ server_name }}"
    publisher: Microsoft.Compute
    virtual_machine_extension_type: CustomScriptExtension
    type_handler_version: '1.9'
    settings: '{"commandToExecute": "powershell -ExecutionPolicy Unrestricted Copy-Item -Path %SYSTEMDRIVE%\AzureData\CustomData.bin -Destination %SYSTEMDRIVE%\AzureData\CustomData.ps1"}'
    auto_upgrade_minor_version: true

- name: Execute VM script extension to enable HTTPS WinRM listener
  delegate_to: localhost
  azure.azcollection.azure_rm_virtualmachineextension:
    name: winrm-extension
    resource_group: "{{ resource_group }}"
    virtual_machine_name: "{{ server_name }}"
    publisher: Microsoft.Compute
    virtual_machine_extension_type: CustomScriptExtension
    type_handler_version: '1.9'
    settings: '{"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File %SYSTEMDRIVE%\AzureData\CustomData.ps1"}'
    auto_upgrade_minor_version: true

- name: Return facts to playbook
  delegate_to: localhost
  no_log: True
  set_fact:
    returned_instance_configuration:
      os_admin_username: "{{ ansible_user }}"
      os_admin_password: "{{ os_admin_password }}"