# Copyright: (c) 2023, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- include_tasks: create_nic.yml

- name: Create the VM
  delegate_to: localhost
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    zones: "{{ zone_id|default(omit) }}"
    name: "{{ server_name }}"
    short_hostname: "{{ server_name }}"
    admin_username: "{{ ansible_user }}"
    vm_size: "{{ vm_size }}"
    virtual_network_name: "{{ virtual_network_name }}"
    subnet_name: "{{ subnet_name }}"
    ssh_password_enabled: false
    security_profile:
      encryption_at_host: "{{ encryption_at_host | default('false') }}" # encryption_at_host should be defined in <infrastructure_name>/variables.yml if required, see : https://docs.ansible.com/ansible/latest/collections/azure/azcollection/azure_rm_virtualmachine_module.html#parameter-security_profile/encryption_at_host
    ssh_public_keys:
      - path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        key_data: "{{ lookup('file', ansible_ssh_public_key_file) }}"
    network_interfaces: "{{ server_name }}-nic-01"
    image:
      offer: "{{ image.offer }}"
      publisher: "{{ image.publisher }}"
      sku: "{{ image.sku }}"
      version: "{{ image.version }}"
    os_type: "{{ os_type | capitalize }}"
    managed_disk_type: "{{ role_root_device_storage_account_type }}"
    tags: "{{ custom_tags }}"
  register: r_azure

- debug: var=r_azure
  delegate_to: localhost
  when: debug | bool

# Enabling SSD would need to be cast in a proper Ansible way once Microsoft
# add the feature during the VM creation. An issue is opened for that:
# https://github.com/ansible-collections/azure/issues/1356
- name: Enable ultra SSD
  delegate_to: localhost
  ansible.builtin.shell: |
    az vm deallocate -n {{ server_name }} -g {{ resource_group }}
    az vm update -n {{ server_name }} -g {{ resource_group }} --ultra-ssd-enabled true
    az vm start -n {{ server_name }} -g {{ resource_group }}
  when:
    - storage_devices.specifications.storage_account_type is defined
    - storage_devices.specifications.storage_account_type == 'UltraSSD_LRS'

- delegate_to: localhost
  set_fact:
    returned:
      instance: "{{ r_azure.ansible_facts.azure_vm }}"

- block:

  - name: Call the role to generate the Linux init script
    include_role:
      name: yak.core.linux_init_script

  - name: Run the Linux init script
    delegate_to: localhost
    azure.azcollection.azure_rm_virtualmachineextension:
      name: winrm-extension
      resource_group: "{{ resource_group }}"
      virtual_machine_name: "{{ server_name }}"
      publisher: Microsoft.Azure.Extensions
      virtual_machine_extension_type: CustomScript
      type_handler_version: 2.1
      settings:
        commandToExecute: "{{ linux_init_script }}"
      auto_upgrade_minor_version: true

  when: ansible_port|default(22) != 22
